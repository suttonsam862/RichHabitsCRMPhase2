Goal
Stop empty org rows and "Created Unknown". Make org list/get deterministic (no dynamic column probe), and ensure /__columns is not captured by "/:id".

Scope
- server/routes/organizations/index.ts ONLY
- DO NOT touch DB schema or client.

Fixes
1) Route order
- Define GET "/__columns" BEFORE GET "/:id".
- It should return { columns: Object.keys(organizations) } using the Drizzle table meta, not information_schema.

2) Deterministic SELECT (no info_schema)
- Import the Drizzle table (e.g., import { organizations } from "@shared/supabase-schema").
- Build an explicit columns object:
  const cols = {
    id: organizations.id,
    name: organizations.name,
    status: organizations.status,
    type: organizations.type,
    logo_url: organizations.logo_url,
    title_card_url: organizations.title_card_url,
    email: organizations.email,
    phone: organizations.phone,
    address_line1: organizations.address_line1,
    city: organizations.city,
    state: organizations.state,
    zip: organizations.zip,
    universal_discounts: organizations.universal_discounts,
    created_at: organizations.created_at,
    updated_at: organizations.updated_at,
  };
- For list: db.select(cols).from(organizations).orderBy(desc(organizations.created_at)).limit(pageSize).offset(offset).
- For get/:id: same columns + where(eq(organizations.id, id)).

3) Stable JSON envelope
- List → 200 { success:true, data: mappedRows, count }
- Get  → 200 { success:true, data } or 404 { error:"Organization not found" }
- NEVER send empty body.

4) Mapper (snake→camel + dates)
- Add dbToDto(row): {
   id, name, status, type,
   logoUrl: row.logo_url ?? null,
   titleCardUrl: row.title_card_url ?? null,
   email: row.email ?? null,
   phone: row.phone ?? null,
   addressLine1: row.address_line1 ?? null,
   city: row.city ?? null,
   state: row.state ?? null,
   zip: row.zip ?? null,
   universalDiscounts: row.universal_discounts ?? 0,
   createdAt: row.created_at?.toISOString?.() ?? null,
   updatedAt: row.updated_at?.toISOString?.() ?? null,
}
- Map list rows with dbToDto; ensure createdAt is a valid ISO string or null.

5) Minimal tests (optional now)
- Quick supertest: list returns success true and data[0].id string; get/:id returns success true or 404 JSON.

Acceptance
- GET /api/organizations returns non-empty objects with id, name, createdAt.
- Cards show "Created <date>" (no "Unknown").
- GET /api/organizations/__columns returns static list and is not treated as :id.
