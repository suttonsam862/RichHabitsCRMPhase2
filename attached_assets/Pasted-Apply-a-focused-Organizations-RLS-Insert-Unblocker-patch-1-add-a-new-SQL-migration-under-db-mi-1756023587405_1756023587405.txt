Apply a focused “Organizations RLS & Insert Unblocker” patch: 1) add a new SQL migration under db/migrations that (idempotently) a) enables RLS on public.organizations (no-op if on), b) creates/repairs INSERT policy for role authenticated as: CREATE POLICY organizations_insert ON public.organizations FOR INSERT TO authenticated WITH CHECK (auth.uid() IS NOT NULL);, c) creates/repairs SELECT policy: CREATE POLICY org_select ON public.organizations FOR SELECT TO authenticated USING (public.is_org_member(auth.uid(), id));, d) creates/repairs UPDATE/DELETE policies (admin-only): USING (public.is_org_admin(auth.uid(), id)) WITH CHECK (public.is_org_admin(auth.uid(), id)), e) confirms trigger trg_org_after_insert_admin exists and re-creates public.handle_org_insert() as SECURITY DEFINER (same body as before, slug='admin'), f) adds a PostgREST reload: SELECT pg_notify('pgrst','reload schema');, g) adds a small RLS self-test RPC public.org_can_insert() returning boolean as SECURITY INVOKER body: SELECT (auth.uid() IS NOT NULL);; 2) add an admin route server/routes/admin/schema.ts with POST /api/v1/admin/schema/reload → calls supabaseAdmin.rpc('pgrst_reload'), and a route POST /api/v1/admin/rls/selftest → calls supabaseForUser(token).rpc('org_can_insert') and returns { canInsert:true|false }; mount both once in server/routes/index.ts; 3) in server/index.ts set trust proxy before rate-limit (app.set('trust proxy', 1);) to remove the ERR_ERL_UNEXPECTED_X_FORWARDED_FOR warning; 4) in server/routes/organizations/index.ts a) ensure create handler uses the user token client (supabaseForUser) for the INSERT, b) after insert, select the row with the same client so the RLS reflects the new membership, c) default colorPalette to [] if missing and always compute gradient_css; 5) run the migration then npm run preflight && npm run check && npm run dev; 6) print a checklist: (a) INSERT policy present, (b) SELECT/UPDATE/DELETE policies present, (c) trigger security definers ok, (d) PostgREST reload OK, (e) /api/v1/admin/rls/selftest returned { canInsert:true }. Do not create duplicate router mounts or touch client/_legacy.